{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Docs Hotkey \u00b6 Overview \u00b6 Docs Hotkey is a free, open-source Chrome extension for creating custom keyboard shortcuts in Google Docs. Originally, it was made solely to add a highlighting shortcut, but other formatting shortcuts have since been added. Hotkeys can currently be configured to: Highlight in any color Bold Underline Italicize Change text color Change fonts Change font size Set heading type (e.g., Heading 1, Normal Text, Title) Strike through text Change alignment and indentation Add emoji reactions Add bulleted lists and set their spacing Clear all styles and remove specific styles Insert building blocks Execute add-ons Demo \u00b6 Installation \u00b6 Docs Hotkey is available for free on the Chrome Web Store . After installing the extension or updating a hotkey, you may need to refresh any Google Docs tabs. Alternatively, you may build the extension from its source code using the instructions on the Building from Source page. Getting Started \u00b6 As a simple introduction, we'll create a hotkey to highlight the selected text. To start, open a Google Doc and click on the Docs Hotkey extension in the toolbar. Then, click on the \"Add Command\" button. You've just created your first command! A command is run whenever a keyboard shortcut is pressed, and it directs Docs Hotkey on what actions to perform on the document. Give this new command a name and add a \"Highlight\" action by clicking \"Add action\" and selecting \"Highlight\" from the dropdown menu. The next textbox specifies the configuration for the action. In this case, the highlight action needs a color here, so we'll pick yellow. Click \"Save All\" to register your new command. Finally, navigate to chrome://extensions/shortcuts in your browser by typing it in the search bar. Find the section for Docs Hotkey and edit the shortcut for \"Slot 1\" \u2014 you can find this slot number for any of your commands on the extenion pop-up. Your hotkey is good to go! Select some text, press the keyboard shortcut you chose, and your text will instantly be highlighted. If you're having trouble getting it to work, you may need to refresh the Docs page.","title":"Home"},{"location":"#docs-hotkey","text":"","title":"Docs Hotkey"},{"location":"#overview","text":"Docs Hotkey is a free, open-source Chrome extension for creating custom keyboard shortcuts in Google Docs. Originally, it was made solely to add a highlighting shortcut, but other formatting shortcuts have since been added. Hotkeys can currently be configured to: Highlight in any color Bold Underline Italicize Change text color Change fonts Change font size Set heading type (e.g., Heading 1, Normal Text, Title) Strike through text Change alignment and indentation Add emoji reactions Add bulleted lists and set their spacing Clear all styles and remove specific styles Insert building blocks Execute add-ons","title":"Overview"},{"location":"#demo","text":"","title":"Demo"},{"location":"#installation","text":"Docs Hotkey is available for free on the Chrome Web Store . After installing the extension or updating a hotkey, you may need to refresh any Google Docs tabs. Alternatively, you may build the extension from its source code using the instructions on the Building from Source page.","title":"Installation"},{"location":"#getting-started","text":"As a simple introduction, we'll create a hotkey to highlight the selected text. To start, open a Google Doc and click on the Docs Hotkey extension in the toolbar. Then, click on the \"Add Command\" button. You've just created your first command! A command is run whenever a keyboard shortcut is pressed, and it directs Docs Hotkey on what actions to perform on the document. Give this new command a name and add a \"Highlight\" action by clicking \"Add action\" and selecting \"Highlight\" from the dropdown menu. The next textbox specifies the configuration for the action. In this case, the highlight action needs a color here, so we'll pick yellow. Click \"Save All\" to register your new command. Finally, navigate to chrome://extensions/shortcuts in your browser by typing it in the search bar. Find the section for Docs Hotkey and edit the shortcut for \"Slot 1\" \u2014 you can find this slot number for any of your commands on the extenion pop-up. Your hotkey is good to go! Select some text, press the keyboard shortcut you chose, and your text will instantly be highlighted. If you're having trouble getting it to work, you may need to refresh the Docs page.","title":"Getting Started"},{"location":"about/","text":"About \u00b6 This extension was created by Zack Murry . Bugs reports and feature requests can be sent to zack.murry.developer@gmail.com. If you find this extension useful, please consider rating it on the Chrome Web Store. You can also support its development on Ko-Fi . This is free, open-source software licensed under the MIT License . To contribute, visit https://github.com/ZackMurry/docs-hotkey .","title":"About"},{"location":"about/#about","text":"This extension was created by Zack Murry . Bugs reports and feature requests can be sent to zack.murry.developer@gmail.com. If you find this extension useful, please consider rating it on the Chrome Web Store. You can also support its development on Ko-Fi . This is free, open-source software licensed under the MIT License . To contribute, visit https://github.com/ZackMurry/docs-hotkey .","title":"About"},{"location":"build/","text":"Building from Source \u00b6 If you'd like to build Docs Hotkey from its source code, follow these steps: Clone the repository from Github with the command git clone https://github.com/ZackMurry/docs-hotkey Install Node.js. Use npm install to install the extension's dependencies. Use npm run build to compile the extension. Go to chrome://extensions in Google Chrome. Click \"Load unpacked\" and select the \"build\" folder in the Docs Hotkey directory.","title":"Building from Source"},{"location":"build/#building-from-source","text":"If you'd like to build Docs Hotkey from its source code, follow these steps: Clone the repository from Github with the command git clone https://github.com/ZackMurry/docs-hotkey Install Node.js. Use npm install to install the extension's dependencies. Use npm run build to compile the extension. Go to chrome://extensions in Google Chrome. Click \"Load unpacked\" and select the \"build\" folder in the Docs Hotkey directory.","title":"Building from Source"},{"location":"usage/","text":"Usage \u00b6 Docs Hotkey supports over a dozen actions, which can automate wide-ranging tasks on Docs. Many actions are adjustable, including through their configuration box and their \"toggle\" checkbox. For example, consider this action: The type of this action is highlight, its configuration is yellow, and it can be toggled . If an action can be toggled , then running it twice does nothing. Using the above highlight example, if the action is run on already-highlighted text, then the highlight will be removed. If the toggle box were unchecked, toggling would be disabled and running the action on highlighted text would have no effect. The Actions section of the documentation is dedicated to configuring specific actions, primarily on the configuration that can be passed into each action. For an introductory usage guide, see the Getting Started section. For reference, here is a list of all of the currently supported actions. Some of these actions do not have documentation yet, but typically have default configurations that will show you the expected input format.","title":"Usage"},{"location":"usage/#usage","text":"Docs Hotkey supports over a dozen actions, which can automate wide-ranging tasks on Docs. Many actions are adjustable, including through their configuration box and their \"toggle\" checkbox. For example, consider this action: The type of this action is highlight, its configuration is yellow, and it can be toggled . If an action can be toggled , then running it twice does nothing. Using the above highlight example, if the action is run on already-highlighted text, then the highlight will be removed. If the toggle box were unchecked, toggling would be disabled and running the action on highlighted text would have no effect. The Actions section of the documentation is dedicated to configuring specific actions, primarily on the configuration that can be passed into each action. For an introductory usage guide, see the Getting Started section. For reference, here is a list of all of the currently supported actions. Some of these actions do not have documentation yet, but typically have default configurations that will show you the expected input format.","title":"Usage"},{"location":"actions/addons/","text":"Executing Add-ons \u00b6 The execute add-on action runs a Google Docs add-on from the Extensions menu. The action's configuration should specify how to reach the add-on from this menu. For example, if you have the \"Debate Format\" add-on with a \"Shrink\" tool, then your configuration should be \"Debate Format.Shrink\". Sample Add-on \u00b6 Creating a custom add-on is a great way to extend Docs Hotkey's functionality. Below is the source code for an add-on that shrinks any unbolded and unhighlighted text. Some users have had success using LLMs (specifically Gemini) to create custom add-on scripts \u2014 have the model use the onOpen function below to create an add-on menu that is compatible with Docs Hotkey. function onOpen () { DocumentApp . getUi (). createAddonMenu (). addItem ( 'Shrink' , 'shrink' ). addToUi () } function shrink () { const doc = DocumentApp . getActiveDocument () if ( ! doc . getSelection ()) { return } const elements = doc . getSelection (). getRangeElements () for ( let element of elements ) { if ( ! element . getElement (). asText ) { continue } const text = element . getElement (). asText () const indices = text . getTextAttributeIndices () indices . push ( text . getText (). length ) for ( let i = 0 ; i < indices . length - 1 ; i ++ ) { if ( ! text . isBold ( indices [ i ]) && ! text . getBackgroundColor ( indices [ i ])) { text . setFontSize ( indices [ i ], indices [ i + 1 ] - 1 , 8 ) } } } }","title":"Executing Add-ons"},{"location":"actions/addons/#executing-add-ons","text":"The execute add-on action runs a Google Docs add-on from the Extensions menu. The action's configuration should specify how to reach the add-on from this menu. For example, if you have the \"Debate Format\" add-on with a \"Shrink\" tool, then your configuration should be \"Debate Format.Shrink\".","title":"Executing Add-ons"},{"location":"actions/addons/#sample-add-on","text":"Creating a custom add-on is a great way to extend Docs Hotkey's functionality. Below is the source code for an add-on that shrinks any unbolded and unhighlighted text. Some users have had success using LLMs (specifically Gemini) to create custom add-on scripts \u2014 have the model use the onOpen function below to create an add-on menu that is compatible with Docs Hotkey. function onOpen () { DocumentApp . getUi (). createAddonMenu (). addItem ( 'Shrink' , 'shrink' ). addToUi () } function shrink () { const doc = DocumentApp . getActiveDocument () if ( ! doc . getSelection ()) { return } const elements = doc . getSelection (). getRangeElements () for ( let element of elements ) { if ( ! element . getElement (). asText ) { continue } const text = element . getElement (). asText () const indices = text . getTextAttributeIndices () indices . push ( text . getText (). length ) for ( let i = 0 ; i < indices . length - 1 ; i ++ ) { if ( ! text . isBold ( indices [ i ]) && ! text . getBackgroundColor ( indices [ i ])) { text . setFontSize ( indices [ i ], indices [ i + 1 ] - 1 , 8 ) } } } }","title":"Sample Add-on"},{"location":"actions/page/","text":"Actions for Formatting Text \u00b6 Heading \u00b6 The heading action changes the heading type of the selected text. Its configuration is simply the name of the heading type. For example, a configuration of \"Subtitle\" would make the selected text a subtitle. Headings 4-6 can also be used if they are first used manually, after which they appear on the menu. Tip This action can be powerful when combined with heading-specific default styles. If you have a few text styles you reuse, then you can configure your headings with your styles. You can then easily switch between your styles by using a hotkey to change the heading. Align \u00b6 The align action changes the alignment of the current text. Its configuration can be \"left\", \"center\", \"right\", or \"justify\". Indent \u00b6 The indent action adds or removes indentation from the current text. Its configuration accepts an integer, which specifies how many times to indent or un-indent. A positive number will add indentation, whereas a negative number will remove indentation.","title":"Formatting Text"},{"location":"actions/page/#actions-for-formatting-text","text":"","title":"Actions for Formatting Text"},{"location":"actions/page/#heading","text":"The heading action changes the heading type of the selected text. Its configuration is simply the name of the heading type. For example, a configuration of \"Subtitle\" would make the selected text a subtitle. Headings 4-6 can also be used if they are first used manually, after which they appear on the menu. Tip This action can be powerful when combined with heading-specific default styles. If you have a few text styles you reuse, then you can configure your headings with your styles. You can then easily switch between your styles by using a hotkey to change the heading.","title":"Heading"},{"location":"actions/page/#align","text":"The align action changes the alignment of the current text. Its configuration can be \"left\", \"center\", \"right\", or \"justify\".","title":"Align"},{"location":"actions/page/#indent","text":"The indent action adds or removes indentation from the current text. Its configuration accepts an integer, which specifies how many times to indent or un-indent. A positive number will add indentation, whereas a negative number will remove indentation.","title":"Indent"},{"location":"actions/text/","text":"Actions for Styling Text \u00b6 Highlight \u00b6 The highlight action applies a background color to the selected text. The configuration specifies the color of the highlight, in one of two forms: The color name , as defined by Google Docs The hexadecimal (hex) representation of the color The name of a color can be found by opening the clicking the highlight menu and hovering over your desired color on the color palette. In the example below, the configuration \"light green 3\" would use the hovered color. Using a hex code offers a lot more flexibility, as you may pick virtually any color. To start, click the plus icon at the bottom of the highlight color pallete. Once you find a color you like, copy the hex code of the color (highlighted in the image below) and use this as your configuration. Bold, Italicize, Strikethrough, and Underline \u00b6 These actions do not take any configuration and modify the selected text as you'd imagine. Font \u00b6 The font action changes the font family of the selected text using the font selection menu. Make sure the font is visible on the font selection menu, either in the short list of recent fonts or in the longer list below it. Once your font is on the menu, simply use its name as the action's configuration. Hint The \"More fonts\" button allows you to change which fonts appear on the menu. Font Weight \u00b6 Some fonts have multiple weights , which modify the thickness and darkness of the font. The font weight action sets the font weight of the selected text. It can change the font weight to any of the available weights for the current font. The configuration specifies the name of the font weight. For example, if you want to use the semi-bold weight for Roboto, then use \"Semi Bold\" as your configuration. Note If the current font does not support the specified weight, it will keep the current font weight.","title":"Styling Text"},{"location":"actions/text/#actions-for-styling-text","text":"","title":"Actions for Styling Text"},{"location":"actions/text/#highlight","text":"The highlight action applies a background color to the selected text. The configuration specifies the color of the highlight, in one of two forms: The color name , as defined by Google Docs The hexadecimal (hex) representation of the color The name of a color can be found by opening the clicking the highlight menu and hovering over your desired color on the color palette. In the example below, the configuration \"light green 3\" would use the hovered color. Using a hex code offers a lot more flexibility, as you may pick virtually any color. To start, click the plus icon at the bottom of the highlight color pallete. Once you find a color you like, copy the hex code of the color (highlighted in the image below) and use this as your configuration.","title":"Highlight"},{"location":"actions/text/#bold-italicize-strikethrough-and-underline","text":"These actions do not take any configuration and modify the selected text as you'd imagine.","title":"Bold, Italicize, Strikethrough, and Underline"},{"location":"actions/text/#font","text":"The font action changes the font family of the selected text using the font selection menu. Make sure the font is visible on the font selection menu, either in the short list of recent fonts or in the longer list below it. Once your font is on the menu, simply use its name as the action's configuration. Hint The \"More fonts\" button allows you to change which fonts appear on the menu.","title":"Font"},{"location":"actions/text/#font-weight","text":"Some fonts have multiple weights , which modify the thickness and darkness of the font. The font weight action sets the font weight of the selected text. It can change the font weight to any of the available weights for the current font. The configuration specifies the name of the font weight. For example, if you want to use the semi-bold weight for Roboto, then use \"Semi Bold\" as your configuration. Note If the current font does not support the specified weight, it will keep the current font weight.","title":"Font Weight"}]}